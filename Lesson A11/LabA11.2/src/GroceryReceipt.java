/**
 * Simulates a grocery receipt generated by a clerk
 * @author Richard Huang
 */
public class GroceryReceipt {
	protected Employee clerk;
	protected String receipt;
	protected double total;
	
	/**
	 * Initializes the clerk to the passed in employee,
	 * the receipt to an empty string and total to 0
	 * @param clerk - employee generating this receipt
	 */
	public GroceryReceipt(Employee c){
		clerk=c;
		receipt="";
		total=0;
	}
	
	/**
	 * Returns the total amount on this receipt in dollars and cents
	 * @return total amount
	 */
	public double getTotal(){
		return total;
	}
	
	/**
	 * Returns the list of items
	 * @return receipt
	 */
	public String getReceipt(){
		return receipt;
	}
	
	/**
	 * Returns the clerk generating the information
	 * @return clerk 
	 */
	public Employee getClerk(){
		return clerk;
	}
	
	/**
	 * Adds the given item to the receipt
	 * Updates the total by adding in the the items price
	 * @param i - grocery item to be added
	 */
	public void add(Item item){
		receipt+=item.toString()+"\n";
		total+=item.getPrice();
	}
	
	/**
	 * Returns the value passed as a string in the dollar and cents format ####.##
	 * @param value - value to be converted to dollar and cents format
	 * @return String in dollar and cents format
	 */
	public String valueToString(double value){
		String temp=""+Math.round(value*100)/100.0;
		if(temp.substring(temp.indexOf(".")).length()<3){
			return temp+"0";
		}
		return temp;
	}
	
	/**
	 * Returns a string with list of items (one per line) and total receipt amount
	 * @return a string with list of items and total receipt amount
	 */
	public String toString(){
		return receipt+"\nTotal: $"+valueToString(getTotal());
	}
}
